group 'Tron'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:varargs", "-Xlint:classfile", "-Xlint:dep-ann",
        "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
        "-Xlint:path", "-Xlint:static", "-Xlint:try", "-Xlint:fallthrough",
        "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:-options"
]

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }

}
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
        mavenCentral()
    }
    ext {
        projectVersion = '1.3.0-RELEASE'
        grpcVersion = '1.6.1'
        protobufVersion = '3.3.0'
        protobufGradlePluginVersion = '0.8.0'
        springCloudConsulVersion = '1.2.1.RELEASE'
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath "gradle.plugin.com.liferay:gradle-plugins-node:4.3.0"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

dependencies {
    compile 'org.elasticsearch:elasticsearch:6.3.2'
    compile project(':sun-sdk')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile 'com.maxmind.geoip2:geoip2:2.10.0'

    // https://mvnrepository.com/artifact/org.fusesource.leveldbjni/leveldbjni-all
    compile group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'

    // https://mvnrepository.com/artifact/org.iq80.leveldb/leveldb
    compile group: 'org.iq80.leveldb', name: 'leveldb', version: '0.7'

    // google grpc
    compile group: 'io.grpc', name: 'grpc-netty', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.9.0'

    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.4'
    compile "com.madgag.spongycastle:core:1.53.0.0"
    compile "com.madgag.spongycastle:prov:1.53.0.0"
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile "com.google.code.findbugs:jsr305:3.0.0"
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile "org.springframework.cloud:spring-cloud-starter-consul-discovery:${springCloudConsulVersion}"
    compile "org.apache.commons:commons-collections4:4.0"
    compile "org.apache.commons:commons-lang3:3.4"
    compile group: 'com.google.api.grpc', name: 'googleapis-common-protos', version: '0.0.3'
    compile 'com.alibaba:fastjson:1.2.47'
}

run {
    standardInput = System.in
    mainClassName = 'org.tron.walletcli.Monitor'
}

jar {
    from(sourceSets.main.output) {
        include "/**"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'org.tron.walletcli.Monitor'
    }
}

shadowJar {
    baseName = 'monitor-cli'
    classifier = null
    version = null
}